package v1alpha1

import (
	"context"

	server "github.com/kubernetes-csi/csi-proxy/integrationtests/apigroups/server"
)

// TODO wkpo actually generate that shit...

// TODO wkpo rename to versionedServer, and same below?
type v1alpha1Server struct {
	apiGroupServer *server.Server
	// TODO wkpo mouaif...? hard coder en fait, generated...
	version server.Version
}

// TODO wkpo next, apres generation
func (s *v1alpha1Server) ComputeDouble(ctx context.Context, v1alpha1Request *ComputeDoubleRequest) (*ComputeDoubleResponse, error) {
	request := &server.ComputeDoubleRequest{}
	if err := Convert_v1alpha1_ComputeDoubleRequest_To_server_ComputeDoubleRequest(v1alpha1Request, request); err != nil {
		return nil, err
	}
	response, err := s.apiGroupServer.ComputeDouble(ctx, request, s.version)
	if err != nil {
		return nil, err
	}
	v1alpha1Response := &ComputeDoubleResponse{}
	if err = Convert_server_ComputeDoubleResponse_To_v1alpha1_ComputeDoubleResponse(response, v1alpha1Response); err != nil {
		return nil, err
	}
	return v1alpha1Response, nil
}

// TODO wkpo move to 1st line
// Code generated by server-gen. DO NOT EDIT.
