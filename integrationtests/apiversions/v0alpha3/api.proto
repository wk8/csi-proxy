// TODO wkpo comment!

syntax = "proto3";

package v0alpha3;

// TODO wkpo double check comments are in sync with code!

// TODO wkpo on devrait faire des integration tests avec un older client, newer server, et vice versa!

service TestCSIProxyService {
    // ComputeDouble computes the double of the input. Real smart stuff!
    rpc ComputeDouble(ComputeDoubleRequest) returns (ComputeDoubleResponse) {}
    // ComputeDouble computes the double of the input. Real smart stuff!

    // TellMeAPoem returns a very poetic response.
    // It got added in v0alpha3.
    rpc TellMeAPoem(TellMeAPoemRequest) returns (TellMeAPoemResponse) {}
}

message ComputeDoubleRequest{
    // in version v0alpha1, we just accepted int32s as input
    int32 input32 = 1;

    // but in version v0alpha2, we figured that we might as well also accept int64s!
    // that also prompted deprecating the input32 field, which got dropped altogether in v0alpha4.
    int64 input64 = 2;

    // in version v0alpha3, we thought we should actually accept string inputs instead: the input
    // would just need to be parsable by strconv.ParseInt (yeah, I know, great design);
    // that prompted deprecating using input64, too.
    string input = 3;
}

message ComputeDoubleResponse{
    // that field is used to reply to clients giving a 32 bits input
    int32 response32 = 1;

    // that field is used to reply to clients giving a 64 bits or string input, starting from v0alpha2
    int64 response = 2;

    // we didn't realize it at the beginning, but these things can overflow! in that case
    // we need to notify the caller that something went wrong
    // that got introduced in v0alpha2
    bool success = 3;
    string error_message = 4;
}

message TellMeAPoemRequest{
}

message TellMeAPoemResponse{
    string poem = 1;
}
