// Code generated by protoc-gen-go. DO NOT EDIT.
// source: general_storage.proto

package general_storage

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	api "github.com/kubernetes-csi/csi-proxy/api"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Disk partition type
type PartitionDiskRequest_PartitionType int32

const (
	PartitionDiskRequest_MBR PartitionDiskRequest_PartitionType = 0
	PartitionDiskRequest_GPT PartitionDiskRequest_PartitionType = 1
)

var PartitionDiskRequest_PartitionType_name = map[int32]string{
	0: "MBR",
	1: "GPT",
}

var PartitionDiskRequest_PartitionType_value = map[string]int32{
	"MBR": 0,
	"GPT": 1,
}

func (x PartitionDiskRequest_PartitionType) String() string {
	return proto.EnumName(PartitionDiskRequest_PartitionType_name, int32(x))
}

func (PartitionDiskRequest_PartitionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_23cf78355e34b894, []int{2, 0}
}

// FileSystem type
type FormatVolumeRequest_FileSystemType int32

const (
	FormatVolumeRequest_NTFS FormatVolumeRequest_FileSystemType = 0
	FormatVolumeRequest_FAT  FormatVolumeRequest_FileSystemType = 1
)

var FormatVolumeRequest_FileSystemType_name = map[int32]string{
	0: "NTFS",
	1: "FAT",
}

var FormatVolumeRequest_FileSystemType_value = map[string]int32{
	"NTFS": 0,
	"FAT":  1,
}

func (x FormatVolumeRequest_FileSystemType) String() string {
	return proto.EnumName(FormatVolumeRequest_FileSystemType_name, int32(x))
}

func (FormatVolumeRequest_FileSystemType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_23cf78355e34b894, []int{4, 0}
}

type RescanRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RescanRequest) Reset()         { *m = RescanRequest{} }
func (m *RescanRequest) String() string { return proto.CompactTextString(m) }
func (*RescanRequest) ProtoMessage()    {}
func (*RescanRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_23cf78355e34b894, []int{0}
}

func (m *RescanRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RescanRequest.Unmarshal(m, b)
}
func (m *RescanRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RescanRequest.Marshal(b, m, deterministic)
}
func (m *RescanRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RescanRequest.Merge(m, src)
}
func (m *RescanRequest) XXX_Size() int {
	return xxx_messageInfo_RescanRequest.Size(m)
}
func (m *RescanRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RescanRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RescanRequest proto.InternalMessageInfo

type RescanResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Types that are valid to be assigned to Error:
	//	*RescanResponse_CmdletError
	//	*RescanResponse_ErrorMessage
	Error                isRescanResponse_Error `protobuf_oneof:"error"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *RescanResponse) Reset()         { *m = RescanResponse{} }
func (m *RescanResponse) String() string { return proto.CompactTextString(m) }
func (*RescanResponse) ProtoMessage()    {}
func (*RescanResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_23cf78355e34b894, []int{1}
}

func (m *RescanResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RescanResponse.Unmarshal(m, b)
}
func (m *RescanResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RescanResponse.Marshal(b, m, deterministic)
}
func (m *RescanResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RescanResponse.Merge(m, src)
}
func (m *RescanResponse) XXX_Size() int {
	return xxx_messageInfo_RescanResponse.Size(m)
}
func (m *RescanResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RescanResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RescanResponse proto.InternalMessageInfo

func (m *RescanResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type isRescanResponse_Error interface {
	isRescanResponse_Error()
}

type RescanResponse_CmdletError struct {
	CmdletError *api.CmdletError `protobuf:"bytes,2,opt,name=cmdlet_error,json=cmdletError,proto3,oneof"`
}

type RescanResponse_ErrorMessage struct {
	ErrorMessage string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3,oneof"`
}

func (*RescanResponse_CmdletError) isRescanResponse_Error() {}

func (*RescanResponse_ErrorMessage) isRescanResponse_Error() {}

func (m *RescanResponse) GetError() isRescanResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *RescanResponse) GetCmdletError() *api.CmdletError {
	if x, ok := m.GetError().(*RescanResponse_CmdletError); ok {
		return x.CmdletError
	}
	return nil
}

func (m *RescanResponse) GetErrorMessage() string {
	if x, ok := m.GetError().(*RescanResponse_ErrorMessage); ok {
		return x.ErrorMessage
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RescanResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RescanResponse_CmdletError)(nil),
		(*RescanResponse_ErrorMessage)(nil),
	}
}

type PartitionDiskRequest struct {
	// The Windows disk device to partition and the paritioning mode: MBR/GPT.
	// The whole disk will be partitioned.
	//
	// Restrictions:
	// disk_number should be less than the maximum number drives allowed by Windows OS.
	DiskNumber           uint32                             `protobuf:"varint,1,opt,name=disk_number,json=diskNumber,proto3" json:"disk_number,omitempty"`
	Type                 PartitionDiskRequest_PartitionType `protobuf:"varint,2,opt,name=type,proto3,enum=PartitionDiskRequest_PartitionType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *PartitionDiskRequest) Reset()         { *m = PartitionDiskRequest{} }
func (m *PartitionDiskRequest) String() string { return proto.CompactTextString(m) }
func (*PartitionDiskRequest) ProtoMessage()    {}
func (*PartitionDiskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_23cf78355e34b894, []int{2}
}

func (m *PartitionDiskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartitionDiskRequest.Unmarshal(m, b)
}
func (m *PartitionDiskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartitionDiskRequest.Marshal(b, m, deterministic)
}
func (m *PartitionDiskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartitionDiskRequest.Merge(m, src)
}
func (m *PartitionDiskRequest) XXX_Size() int {
	return xxx_messageInfo_PartitionDiskRequest.Size(m)
}
func (m *PartitionDiskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PartitionDiskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PartitionDiskRequest proto.InternalMessageInfo

func (m *PartitionDiskRequest) GetDiskNumber() uint32 {
	if m != nil {
		return m.DiskNumber
	}
	return 0
}

func (m *PartitionDiskRequest) GetType() PartitionDiskRequest_PartitionType {
	if m != nil {
		return m.Type
	}
	return PartitionDiskRequest_MBR
}

type PartitionDiskResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Types that are valid to be assigned to Error:
	//	*PartitionDiskResponse_CmdletError
	//	*PartitionDiskResponse_ErrorMessage
	Error isPartitionDiskResponse_Error `protobuf_oneof:"error"`
	// GUID of the volume device resulting from the partition.
	VolumeDeviceGuid     string   `protobuf:"bytes,4,opt,name=volume_device_guid,json=volumeDeviceGuid,proto3" json:"volume_device_guid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PartitionDiskResponse) Reset()         { *m = PartitionDiskResponse{} }
func (m *PartitionDiskResponse) String() string { return proto.CompactTextString(m) }
func (*PartitionDiskResponse) ProtoMessage()    {}
func (*PartitionDiskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_23cf78355e34b894, []int{3}
}

func (m *PartitionDiskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartitionDiskResponse.Unmarshal(m, b)
}
func (m *PartitionDiskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartitionDiskResponse.Marshal(b, m, deterministic)
}
func (m *PartitionDiskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartitionDiskResponse.Merge(m, src)
}
func (m *PartitionDiskResponse) XXX_Size() int {
	return xxx_messageInfo_PartitionDiskResponse.Size(m)
}
func (m *PartitionDiskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PartitionDiskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PartitionDiskResponse proto.InternalMessageInfo

func (m *PartitionDiskResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type isPartitionDiskResponse_Error interface {
	isPartitionDiskResponse_Error()
}

type PartitionDiskResponse_CmdletError struct {
	CmdletError *api.CmdletError `protobuf:"bytes,2,opt,name=cmdlet_error,json=cmdletError,proto3,oneof"`
}

type PartitionDiskResponse_ErrorMessage struct {
	ErrorMessage string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3,oneof"`
}

func (*PartitionDiskResponse_CmdletError) isPartitionDiskResponse_Error() {}

func (*PartitionDiskResponse_ErrorMessage) isPartitionDiskResponse_Error() {}

func (m *PartitionDiskResponse) GetError() isPartitionDiskResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *PartitionDiskResponse) GetCmdletError() *api.CmdletError {
	if x, ok := m.GetError().(*PartitionDiskResponse_CmdletError); ok {
		return x.CmdletError
	}
	return nil
}

func (m *PartitionDiskResponse) GetErrorMessage() string {
	if x, ok := m.GetError().(*PartitionDiskResponse_ErrorMessage); ok {
		return x.ErrorMessage
	}
	return ""
}

func (m *PartitionDiskResponse) GetVolumeDeviceGuid() string {
	if m != nil {
		return m.VolumeDeviceGuid
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*PartitionDiskResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*PartitionDiskResponse_CmdletError)(nil),
		(*PartitionDiskResponse_ErrorMessage)(nil),
	}
}

type FormatVolumeRequest struct {
	// The GUID of the Windows volume device to format,
	// typically volume_device_guid returned by PartitionDiskResponse.
	VolumeDeviceGuid     string                             `protobuf:"bytes,1,opt,name=volume_device_guid,json=volumeDeviceGuid,proto3" json:"volume_device_guid,omitempty"`
	Type                 FormatVolumeRequest_FileSystemType `protobuf:"varint,2,opt,name=type,proto3,enum=FormatVolumeRequest_FileSystemType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *FormatVolumeRequest) Reset()         { *m = FormatVolumeRequest{} }
func (m *FormatVolumeRequest) String() string { return proto.CompactTextString(m) }
func (*FormatVolumeRequest) ProtoMessage()    {}
func (*FormatVolumeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_23cf78355e34b894, []int{4}
}

func (m *FormatVolumeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormatVolumeRequest.Unmarshal(m, b)
}
func (m *FormatVolumeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormatVolumeRequest.Marshal(b, m, deterministic)
}
func (m *FormatVolumeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormatVolumeRequest.Merge(m, src)
}
func (m *FormatVolumeRequest) XXX_Size() int {
	return xxx_messageInfo_FormatVolumeRequest.Size(m)
}
func (m *FormatVolumeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FormatVolumeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FormatVolumeRequest proto.InternalMessageInfo

func (m *FormatVolumeRequest) GetVolumeDeviceGuid() string {
	if m != nil {
		return m.VolumeDeviceGuid
	}
	return ""
}

func (m *FormatVolumeRequest) GetType() FormatVolumeRequest_FileSystemType {
	if m != nil {
		return m.Type
	}
	return FormatVolumeRequest_NTFS
}

type FormatVolumeResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Types that are valid to be assigned to Error:
	//	*FormatVolumeResponse_CmdletError
	//	*FormatVolumeResponse_ErrorMessage
	Error                isFormatVolumeResponse_Error `protobuf_oneof:"error"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *FormatVolumeResponse) Reset()         { *m = FormatVolumeResponse{} }
func (m *FormatVolumeResponse) String() string { return proto.CompactTextString(m) }
func (*FormatVolumeResponse) ProtoMessage()    {}
func (*FormatVolumeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_23cf78355e34b894, []int{5}
}

func (m *FormatVolumeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormatVolumeResponse.Unmarshal(m, b)
}
func (m *FormatVolumeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormatVolumeResponse.Marshal(b, m, deterministic)
}
func (m *FormatVolumeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormatVolumeResponse.Merge(m, src)
}
func (m *FormatVolumeResponse) XXX_Size() int {
	return xxx_messageInfo_FormatVolumeResponse.Size(m)
}
func (m *FormatVolumeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FormatVolumeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FormatVolumeResponse proto.InternalMessageInfo

func (m *FormatVolumeResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type isFormatVolumeResponse_Error interface {
	isFormatVolumeResponse_Error()
}

type FormatVolumeResponse_CmdletError struct {
	CmdletError *api.CmdletError `protobuf:"bytes,2,opt,name=cmdlet_error,json=cmdletError,proto3,oneof"`
}

type FormatVolumeResponse_ErrorMessage struct {
	ErrorMessage string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3,oneof"`
}

func (*FormatVolumeResponse_CmdletError) isFormatVolumeResponse_Error() {}

func (*FormatVolumeResponse_ErrorMessage) isFormatVolumeResponse_Error() {}

func (m *FormatVolumeResponse) GetError() isFormatVolumeResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *FormatVolumeResponse) GetCmdletError() *api.CmdletError {
	if x, ok := m.GetError().(*FormatVolumeResponse_CmdletError); ok {
		return x.CmdletError
	}
	return nil
}

func (m *FormatVolumeResponse) GetErrorMessage() string {
	if x, ok := m.GetError().(*FormatVolumeResponse_ErrorMessage); ok {
		return x.ErrorMessage
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FormatVolumeResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FormatVolumeResponse_CmdletError)(nil),
		(*FormatVolumeResponse_ErrorMessage)(nil),
	}
}

type ListDiskLocationsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDiskLocationsRequest) Reset()         { *m = ListDiskLocationsRequest{} }
func (m *ListDiskLocationsRequest) String() string { return proto.CompactTextString(m) }
func (*ListDiskLocationsRequest) ProtoMessage()    {}
func (*ListDiskLocationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_23cf78355e34b894, []int{6}
}

func (m *ListDiskLocationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDiskLocationsRequest.Unmarshal(m, b)
}
func (m *ListDiskLocationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDiskLocationsRequest.Marshal(b, m, deterministic)
}
func (m *ListDiskLocationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDiskLocationsRequest.Merge(m, src)
}
func (m *ListDiskLocationsRequest) XXX_Size() int {
	return xxx_messageInfo_ListDiskLocationsRequest.Size(m)
}
func (m *ListDiskLocationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDiskLocationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListDiskLocationsRequest proto.InternalMessageInfo

type DiskLocation struct {
	Adapter              string   `protobuf:"bytes,1,opt,name=Adapter,proto3" json:"Adapter,omitempty"`
	Bus                  string   `protobuf:"bytes,2,opt,name=Bus,proto3" json:"Bus,omitempty"`
	Target               string   `protobuf:"bytes,3,opt,name=Target,proto3" json:"Target,omitempty"`
	LUNID                string   `protobuf:"bytes,4,opt,name=LUNID,proto3" json:"LUNID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiskLocation) Reset()         { *m = DiskLocation{} }
func (m *DiskLocation) String() string { return proto.CompactTextString(m) }
func (*DiskLocation) ProtoMessage()    {}
func (*DiskLocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_23cf78355e34b894, []int{7}
}

func (m *DiskLocation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiskLocation.Unmarshal(m, b)
}
func (m *DiskLocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiskLocation.Marshal(b, m, deterministic)
}
func (m *DiskLocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiskLocation.Merge(m, src)
}
func (m *DiskLocation) XXX_Size() int {
	return xxx_messageInfo_DiskLocation.Size(m)
}
func (m *DiskLocation) XXX_DiscardUnknown() {
	xxx_messageInfo_DiskLocation.DiscardUnknown(m)
}

var xxx_messageInfo_DiskLocation proto.InternalMessageInfo

func (m *DiskLocation) GetAdapter() string {
	if m != nil {
		return m.Adapter
	}
	return ""
}

func (m *DiskLocation) GetBus() string {
	if m != nil {
		return m.Bus
	}
	return ""
}

func (m *DiskLocation) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *DiskLocation) GetLUNID() string {
	if m != nil {
		return m.LUNID
	}
	return ""
}

type ListDiskLocationsResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Types that are valid to be assigned to Error:
	//	*ListDiskLocationsResponse_WindowsApiError
	//	*ListDiskLocationsResponse_ErrorMessage
	Error isListDiskLocationsResponse_Error `protobuf_oneof:"error"`
	// Map of disk device objects and <adapter, bus, target, lun ID> associated with each disk device
	DiskLocations        map[string]*DiskLocation `protobuf:"bytes,4,rep,name=disk_locations,json=diskLocations,proto3" json:"disk_locations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ListDiskLocationsResponse) Reset()         { *m = ListDiskLocationsResponse{} }
func (m *ListDiskLocationsResponse) String() string { return proto.CompactTextString(m) }
func (*ListDiskLocationsResponse) ProtoMessage()    {}
func (*ListDiskLocationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_23cf78355e34b894, []int{8}
}

func (m *ListDiskLocationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDiskLocationsResponse.Unmarshal(m, b)
}
func (m *ListDiskLocationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDiskLocationsResponse.Marshal(b, m, deterministic)
}
func (m *ListDiskLocationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDiskLocationsResponse.Merge(m, src)
}
func (m *ListDiskLocationsResponse) XXX_Size() int {
	return xxx_messageInfo_ListDiskLocationsResponse.Size(m)
}
func (m *ListDiskLocationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDiskLocationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListDiskLocationsResponse proto.InternalMessageInfo

func (m *ListDiskLocationsResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type isListDiskLocationsResponse_Error interface {
	isListDiskLocationsResponse_Error()
}

type ListDiskLocationsResponse_WindowsApiError struct {
	WindowsApiError *api.WindowsApiError `protobuf:"bytes,2,opt,name=windows_api_error,json=windowsApiError,proto3,oneof"`
}

type ListDiskLocationsResponse_ErrorMessage struct {
	ErrorMessage string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3,oneof"`
}

func (*ListDiskLocationsResponse_WindowsApiError) isListDiskLocationsResponse_Error() {}

func (*ListDiskLocationsResponse_ErrorMessage) isListDiskLocationsResponse_Error() {}

func (m *ListDiskLocationsResponse) GetError() isListDiskLocationsResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ListDiskLocationsResponse) GetWindowsApiError() *api.WindowsApiError {
	if x, ok := m.GetError().(*ListDiskLocationsResponse_WindowsApiError); ok {
		return x.WindowsApiError
	}
	return nil
}

func (m *ListDiskLocationsResponse) GetErrorMessage() string {
	if x, ok := m.GetError().(*ListDiskLocationsResponse_ErrorMessage); ok {
		return x.ErrorMessage
	}
	return ""
}

func (m *ListDiskLocationsResponse) GetDiskLocations() map[string]*DiskLocation {
	if m != nil {
		return m.DiskLocations
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ListDiskLocationsResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ListDiskLocationsResponse_WindowsApiError)(nil),
		(*ListDiskLocationsResponse_ErrorMessage)(nil),
	}
}

type ListDiskIDsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDiskIDsRequest) Reset()         { *m = ListDiskIDsRequest{} }
func (m *ListDiskIDsRequest) String() string { return proto.CompactTextString(m) }
func (*ListDiskIDsRequest) ProtoMessage()    {}
func (*ListDiskIDsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_23cf78355e34b894, []int{9}
}

func (m *ListDiskIDsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDiskIDsRequest.Unmarshal(m, b)
}
func (m *ListDiskIDsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDiskIDsRequest.Marshal(b, m, deterministic)
}
func (m *ListDiskIDsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDiskIDsRequest.Merge(m, src)
}
func (m *ListDiskIDsRequest) XXX_Size() int {
	return xxx_messageInfo_ListDiskIDsRequest.Size(m)
}
func (m *ListDiskIDsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDiskIDsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListDiskIDsRequest proto.InternalMessageInfo

type DiskIDs struct {
	// list of Disk IDs of ASCII characters associated with disk device.
	IDs                  []string `protobuf:"bytes,1,rep,name=IDs,proto3" json:"IDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiskIDs) Reset()         { *m = DiskIDs{} }
func (m *DiskIDs) String() string { return proto.CompactTextString(m) }
func (*DiskIDs) ProtoMessage()    {}
func (*DiskIDs) Descriptor() ([]byte, []int) {
	return fileDescriptor_23cf78355e34b894, []int{10}
}

func (m *DiskIDs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiskIDs.Unmarshal(m, b)
}
func (m *DiskIDs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiskIDs.Marshal(b, m, deterministic)
}
func (m *DiskIDs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiskIDs.Merge(m, src)
}
func (m *DiskIDs) XXX_Size() int {
	return xxx_messageInfo_DiskIDs.Size(m)
}
func (m *DiskIDs) XXX_DiscardUnknown() {
	xxx_messageInfo_DiskIDs.DiscardUnknown(m)
}

var xxx_messageInfo_DiskIDs proto.InternalMessageInfo

func (m *DiskIDs) GetIDs() []string {
	if m != nil {
		return m.IDs
	}
	return nil
}

type ListDiskIDsResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Types that are valid to be assigned to Error:
	//	*ListDiskIDsResponse_WindowsApiError
	//	*ListDiskIDsResponse_ErrorMessage
	Error isListDiskIDsResponse_Error `protobuf_oneof:"error"`
	// Map of disk device objects and IDs associated with each disk device.
	DiskId               map[string]*DiskIDs `protobuf:"bytes,4,rep,name=disk_id,json=diskId,proto3" json:"disk_id,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ListDiskIDsResponse) Reset()         { *m = ListDiskIDsResponse{} }
func (m *ListDiskIDsResponse) String() string { return proto.CompactTextString(m) }
func (*ListDiskIDsResponse) ProtoMessage()    {}
func (*ListDiskIDsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_23cf78355e34b894, []int{11}
}

func (m *ListDiskIDsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDiskIDsResponse.Unmarshal(m, b)
}
func (m *ListDiskIDsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDiskIDsResponse.Marshal(b, m, deterministic)
}
func (m *ListDiskIDsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDiskIDsResponse.Merge(m, src)
}
func (m *ListDiskIDsResponse) XXX_Size() int {
	return xxx_messageInfo_ListDiskIDsResponse.Size(m)
}
func (m *ListDiskIDsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDiskIDsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListDiskIDsResponse proto.InternalMessageInfo

func (m *ListDiskIDsResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type isListDiskIDsResponse_Error interface {
	isListDiskIDsResponse_Error()
}

type ListDiskIDsResponse_WindowsApiError struct {
	WindowsApiError *api.WindowsApiError `protobuf:"bytes,2,opt,name=windows_api_error,json=windowsApiError,proto3,oneof"`
}

type ListDiskIDsResponse_ErrorMessage struct {
	ErrorMessage string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3,oneof"`
}

func (*ListDiskIDsResponse_WindowsApiError) isListDiskIDsResponse_Error() {}

func (*ListDiskIDsResponse_ErrorMessage) isListDiskIDsResponse_Error() {}

func (m *ListDiskIDsResponse) GetError() isListDiskIDsResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ListDiskIDsResponse) GetWindowsApiError() *api.WindowsApiError {
	if x, ok := m.GetError().(*ListDiskIDsResponse_WindowsApiError); ok {
		return x.WindowsApiError
	}
	return nil
}

func (m *ListDiskIDsResponse) GetErrorMessage() string {
	if x, ok := m.GetError().(*ListDiskIDsResponse_ErrorMessage); ok {
		return x.ErrorMessage
	}
	return ""
}

func (m *ListDiskIDsResponse) GetDiskId() map[string]*DiskIDs {
	if m != nil {
		return m.DiskId
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ListDiskIDsResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ListDiskIDsResponse_WindowsApiError)(nil),
		(*ListDiskIDsResponse_ErrorMessage)(nil),
	}
}

type ListDiskVolumeMappingsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDiskVolumeMappingsRequest) Reset()         { *m = ListDiskVolumeMappingsRequest{} }
func (m *ListDiskVolumeMappingsRequest) String() string { return proto.CompactTextString(m) }
func (*ListDiskVolumeMappingsRequest) ProtoMessage()    {}
func (*ListDiskVolumeMappingsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_23cf78355e34b894, []int{12}
}

func (m *ListDiskVolumeMappingsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDiskVolumeMappingsRequest.Unmarshal(m, b)
}
func (m *ListDiskVolumeMappingsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDiskVolumeMappingsRequest.Marshal(b, m, deterministic)
}
func (m *ListDiskVolumeMappingsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDiskVolumeMappingsRequest.Merge(m, src)
}
func (m *ListDiskVolumeMappingsRequest) XXX_Size() int {
	return xxx_messageInfo_ListDiskVolumeMappingsRequest.Size(m)
}
func (m *ListDiskVolumeMappingsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDiskVolumeMappingsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListDiskVolumeMappingsRequest proto.InternalMessageInfo

type ListDiskVolumeMappingsResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Types that are valid to be assigned to Error:
	//	*ListDiskVolumeMappingsResponse_CmdletError
	//	*ListDiskVolumeMappingsResponse_ErrorMessage
	Error isListDiskVolumeMappingsResponse_Error `protobuf_oneof:"error"`
	// Map of disk devices and volume objects of the form \\?\volume\{GUID} on the disk.
	DiskVolumePair       map[string]string `protobuf:"bytes,4,rep,name=disk_volume_pair,json=diskVolumePair,proto3" json:"disk_volume_pair,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListDiskVolumeMappingsResponse) Reset()         { *m = ListDiskVolumeMappingsResponse{} }
func (m *ListDiskVolumeMappingsResponse) String() string { return proto.CompactTextString(m) }
func (*ListDiskVolumeMappingsResponse) ProtoMessage()    {}
func (*ListDiskVolumeMappingsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_23cf78355e34b894, []int{13}
}

func (m *ListDiskVolumeMappingsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDiskVolumeMappingsResponse.Unmarshal(m, b)
}
func (m *ListDiskVolumeMappingsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDiskVolumeMappingsResponse.Marshal(b, m, deterministic)
}
func (m *ListDiskVolumeMappingsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDiskVolumeMappingsResponse.Merge(m, src)
}
func (m *ListDiskVolumeMappingsResponse) XXX_Size() int {
	return xxx_messageInfo_ListDiskVolumeMappingsResponse.Size(m)
}
func (m *ListDiskVolumeMappingsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDiskVolumeMappingsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListDiskVolumeMappingsResponse proto.InternalMessageInfo

func (m *ListDiskVolumeMappingsResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type isListDiskVolumeMappingsResponse_Error interface {
	isListDiskVolumeMappingsResponse_Error()
}

type ListDiskVolumeMappingsResponse_CmdletError struct {
	CmdletError *api.CmdletError `protobuf:"bytes,2,opt,name=cmdlet_error,json=cmdletError,proto3,oneof"`
}

type ListDiskVolumeMappingsResponse_ErrorMessage struct {
	ErrorMessage string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3,oneof"`
}

func (*ListDiskVolumeMappingsResponse_CmdletError) isListDiskVolumeMappingsResponse_Error() {}

func (*ListDiskVolumeMappingsResponse_ErrorMessage) isListDiskVolumeMappingsResponse_Error() {}

func (m *ListDiskVolumeMappingsResponse) GetError() isListDiskVolumeMappingsResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ListDiskVolumeMappingsResponse) GetCmdletError() *api.CmdletError {
	if x, ok := m.GetError().(*ListDiskVolumeMappingsResponse_CmdletError); ok {
		return x.CmdletError
	}
	return nil
}

func (m *ListDiskVolumeMappingsResponse) GetErrorMessage() string {
	if x, ok := m.GetError().(*ListDiskVolumeMappingsResponse_ErrorMessage); ok {
		return x.ErrorMessage
	}
	return ""
}

func (m *ListDiskVolumeMappingsResponse) GetDiskVolumePair() map[string]string {
	if m != nil {
		return m.DiskVolumePair
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ListDiskVolumeMappingsResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ListDiskVolumeMappingsResponse_CmdletError)(nil),
		(*ListDiskVolumeMappingsResponse_ErrorMessage)(nil),
	}
}

type ResizeVolumeRequest struct {
	// The GUID of the Windows volume device to format,
	// typically volume_device_guid returned by PartitionDiskResponse.
	VolumeDeviceGuid string `protobuf:"bytes,1,opt,name=volume_device_guid,json=volumeDeviceGuid,proto3" json:"volume_device_guid,omitempty"`
	// New size to resize FS to.
	NewSize              uint64   `protobuf:"varint,2,opt,name=new_size,json=newSize,proto3" json:"new_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResizeVolumeRequest) Reset()         { *m = ResizeVolumeRequest{} }
func (m *ResizeVolumeRequest) String() string { return proto.CompactTextString(m) }
func (*ResizeVolumeRequest) ProtoMessage()    {}
func (*ResizeVolumeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_23cf78355e34b894, []int{14}
}

func (m *ResizeVolumeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResizeVolumeRequest.Unmarshal(m, b)
}
func (m *ResizeVolumeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResizeVolumeRequest.Marshal(b, m, deterministic)
}
func (m *ResizeVolumeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResizeVolumeRequest.Merge(m, src)
}
func (m *ResizeVolumeRequest) XXX_Size() int {
	return xxx_messageInfo_ResizeVolumeRequest.Size(m)
}
func (m *ResizeVolumeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResizeVolumeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResizeVolumeRequest proto.InternalMessageInfo

func (m *ResizeVolumeRequest) GetVolumeDeviceGuid() string {
	if m != nil {
		return m.VolumeDeviceGuid
	}
	return ""
}

func (m *ResizeVolumeRequest) GetNewSize() uint64 {
	if m != nil {
		return m.NewSize
	}
	return 0
}

type ResizeVolumeResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Types that are valid to be assigned to Error:
	//	*ResizeVolumeResponse_CmdletError
	//	*ResizeVolumeResponse_ErrorMessage
	Error                isResizeVolumeResponse_Error `protobuf_oneof:"error"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ResizeVolumeResponse) Reset()         { *m = ResizeVolumeResponse{} }
func (m *ResizeVolumeResponse) String() string { return proto.CompactTextString(m) }
func (*ResizeVolumeResponse) ProtoMessage()    {}
func (*ResizeVolumeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_23cf78355e34b894, []int{15}
}

func (m *ResizeVolumeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResizeVolumeResponse.Unmarshal(m, b)
}
func (m *ResizeVolumeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResizeVolumeResponse.Marshal(b, m, deterministic)
}
func (m *ResizeVolumeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResizeVolumeResponse.Merge(m, src)
}
func (m *ResizeVolumeResponse) XXX_Size() int {
	return xxx_messageInfo_ResizeVolumeResponse.Size(m)
}
func (m *ResizeVolumeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResizeVolumeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResizeVolumeResponse proto.InternalMessageInfo

func (m *ResizeVolumeResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type isResizeVolumeResponse_Error interface {
	isResizeVolumeResponse_Error()
}

type ResizeVolumeResponse_CmdletError struct {
	CmdletError *api.CmdletError `protobuf:"bytes,2,opt,name=cmdlet_error,json=cmdletError,proto3,oneof"`
}

type ResizeVolumeResponse_ErrorMessage struct {
	ErrorMessage string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3,oneof"`
}

func (*ResizeVolumeResponse_CmdletError) isResizeVolumeResponse_Error() {}

func (*ResizeVolumeResponse_ErrorMessage) isResizeVolumeResponse_Error() {}

func (m *ResizeVolumeResponse) GetError() isResizeVolumeResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResizeVolumeResponse) GetCmdletError() *api.CmdletError {
	if x, ok := m.GetError().(*ResizeVolumeResponse_CmdletError); ok {
		return x.CmdletError
	}
	return nil
}

func (m *ResizeVolumeResponse) GetErrorMessage() string {
	if x, ok := m.GetError().(*ResizeVolumeResponse_ErrorMessage); ok {
		return x.ErrorMessage
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ResizeVolumeResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ResizeVolumeResponse_CmdletError)(nil),
		(*ResizeVolumeResponse_ErrorMessage)(nil),
	}
}

type DismountVolumeRequest struct {
	// The GUID of the Windows volume device to format,
	// typically volume_device_guid returned by PartitionDiskResponse.
	VolumeDeviceGuid     string   `protobuf:"bytes,1,opt,name=volume_device_guid,json=volumeDeviceGuid,proto3" json:"volume_device_guid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DismountVolumeRequest) Reset()         { *m = DismountVolumeRequest{} }
func (m *DismountVolumeRequest) String() string { return proto.CompactTextString(m) }
func (*DismountVolumeRequest) ProtoMessage()    {}
func (*DismountVolumeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_23cf78355e34b894, []int{16}
}

func (m *DismountVolumeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DismountVolumeRequest.Unmarshal(m, b)
}
func (m *DismountVolumeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DismountVolumeRequest.Marshal(b, m, deterministic)
}
func (m *DismountVolumeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DismountVolumeRequest.Merge(m, src)
}
func (m *DismountVolumeRequest) XXX_Size() int {
	return xxx_messageInfo_DismountVolumeRequest.Size(m)
}
func (m *DismountVolumeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DismountVolumeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DismountVolumeRequest proto.InternalMessageInfo

func (m *DismountVolumeRequest) GetVolumeDeviceGuid() string {
	if m != nil {
		return m.VolumeDeviceGuid
	}
	return ""
}

type DismountVolumeResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Types that are valid to be assigned to Error:
	//	*DismountVolumeResponse_CmdletError
	//	*DismountVolumeResponse_ErrorMessage
	Error                isDismountVolumeResponse_Error `protobuf_oneof:"error"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *DismountVolumeResponse) Reset()         { *m = DismountVolumeResponse{} }
func (m *DismountVolumeResponse) String() string { return proto.CompactTextString(m) }
func (*DismountVolumeResponse) ProtoMessage()    {}
func (*DismountVolumeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_23cf78355e34b894, []int{17}
}

func (m *DismountVolumeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DismountVolumeResponse.Unmarshal(m, b)
}
func (m *DismountVolumeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DismountVolumeResponse.Marshal(b, m, deterministic)
}
func (m *DismountVolumeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DismountVolumeResponse.Merge(m, src)
}
func (m *DismountVolumeResponse) XXX_Size() int {
	return xxx_messageInfo_DismountVolumeResponse.Size(m)
}
func (m *DismountVolumeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DismountVolumeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DismountVolumeResponse proto.InternalMessageInfo

func (m *DismountVolumeResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type isDismountVolumeResponse_Error interface {
	isDismountVolumeResponse_Error()
}

type DismountVolumeResponse_CmdletError struct {
	CmdletError *api.CmdletError `protobuf:"bytes,2,opt,name=cmdlet_error,json=cmdletError,proto3,oneof"`
}

type DismountVolumeResponse_ErrorMessage struct {
	ErrorMessage string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3,oneof"`
}

func (*DismountVolumeResponse_CmdletError) isDismountVolumeResponse_Error() {}

func (*DismountVolumeResponse_ErrorMessage) isDismountVolumeResponse_Error() {}

func (m *DismountVolumeResponse) GetError() isDismountVolumeResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *DismountVolumeResponse) GetCmdletError() *api.CmdletError {
	if x, ok := m.GetError().(*DismountVolumeResponse_CmdletError); ok {
		return x.CmdletError
	}
	return nil
}

func (m *DismountVolumeResponse) GetErrorMessage() string {
	if x, ok := m.GetError().(*DismountVolumeResponse_ErrorMessage); ok {
		return x.ErrorMessage
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*DismountVolumeResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*DismountVolumeResponse_CmdletError)(nil),
		(*DismountVolumeResponse_ErrorMessage)(nil),
	}
}

func init() {
	proto.RegisterEnum("PartitionDiskRequest_PartitionType", PartitionDiskRequest_PartitionType_name, PartitionDiskRequest_PartitionType_value)
	proto.RegisterEnum("FormatVolumeRequest_FileSystemType", FormatVolumeRequest_FileSystemType_name, FormatVolumeRequest_FileSystemType_value)
	proto.RegisterType((*RescanRequest)(nil), "RescanRequest")
	proto.RegisterType((*RescanResponse)(nil), "RescanResponse")
	proto.RegisterType((*PartitionDiskRequest)(nil), "PartitionDiskRequest")
	proto.RegisterType((*PartitionDiskResponse)(nil), "PartitionDiskResponse")
	proto.RegisterType((*FormatVolumeRequest)(nil), "FormatVolumeRequest")
	proto.RegisterType((*FormatVolumeResponse)(nil), "FormatVolumeResponse")
	proto.RegisterType((*ListDiskLocationsRequest)(nil), "ListDiskLocationsRequest")
	proto.RegisterType((*DiskLocation)(nil), "DiskLocation")
	proto.RegisterType((*ListDiskLocationsResponse)(nil), "ListDiskLocationsResponse")
	proto.RegisterMapType((map[string]*DiskLocation)(nil), "ListDiskLocationsResponse.DiskLocationsEntry")
	proto.RegisterType((*ListDiskIDsRequest)(nil), "ListDiskIDsRequest")
	proto.RegisterType((*DiskIDs)(nil), "DiskIDs")
	proto.RegisterType((*ListDiskIDsResponse)(nil), "ListDiskIDsResponse")
	proto.RegisterMapType((map[string]*DiskIDs)(nil), "ListDiskIDsResponse.DiskIdEntry")
	proto.RegisterType((*ListDiskVolumeMappingsRequest)(nil), "ListDiskVolumeMappingsRequest")
	proto.RegisterType((*ListDiskVolumeMappingsResponse)(nil), "ListDiskVolumeMappingsResponse")
	proto.RegisterMapType((map[string]string)(nil), "ListDiskVolumeMappingsResponse.DiskVolumePairEntry")
	proto.RegisterType((*ResizeVolumeRequest)(nil), "ResizeVolumeRequest")
	proto.RegisterType((*ResizeVolumeResponse)(nil), "ResizeVolumeResponse")
	proto.RegisterType((*DismountVolumeRequest)(nil), "DismountVolumeRequest")
	proto.RegisterType((*DismountVolumeResponse)(nil), "DismountVolumeResponse")
}

func init() { proto.RegisterFile("general_storage.proto", fileDescriptor_23cf78355e34b894) }

var fileDescriptor_23cf78355e34b894 = []byte{
	// 780 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x96, 0xcb, 0x4e, 0xdb, 0x4c,
	0x14, 0xc7, 0x71, 0x12, 0x48, 0x72, 0x72, 0x21, 0x9f, 0x13, 0x50, 0xc8, 0xa7, 0x42, 0x6a, 0x54,
	0x29, 0x8b, 0xe2, 0xa8, 0x50, 0xa9, 0x97, 0x45, 0xa5, 0x40, 0x08, 0x44, 0x02, 0x8a, 0x86, 0xb4,
	0x5d, 0xb5, 0x96, 0x63, 0x8f, 0xc2, 0x28, 0xf1, 0xa5, 0x1e, 0x9b, 0x34, 0xbc, 0x43, 0x57, 0x55,
	0xd7, 0x55, 0x9f, 0xa4, 0x52, 0xd7, 0x7d, 0xa8, 0x6a, 0xc6, 0x36, 0x89, 0xc1, 0xb4, 0x95, 0x58,
	0x90, 0xdd, 0x9c, 0xff, 0x9c, 0x39, 0xf3, 0xf7, 0x6f, 0x66, 0x4e, 0x02, 0x2b, 0x03, 0x6c, 0x62,
	0x47, 0x1d, 0x29, 0xd4, 0xb5, 0x1c, 0x75, 0x80, 0x65, 0xdb, 0xb1, 0x5c, 0xab, 0xf6, 0x74, 0x40,
	0xdc, 0x73, 0xaf, 0x2f, 0x6b, 0x96, 0xd1, 0x1c, 0x7a, 0x7d, 0xec, 0x98, 0xd8, 0xc5, 0x74, 0x4b,
	0xa3, 0xa4, 0xa9, 0x51, 0xb2, 0x65, 0x3b, 0xd6, 0xa7, 0x49, 0x53, 0xb5, 0x49, 0x13, 0x3b, 0x8e,
	0xe5, 0x50, 0x7f, 0x95, 0xb4, 0x0c, 0x05, 0x84, 0xa9, 0xa6, 0x9a, 0x08, 0x7f, 0xf4, 0x30, 0x75,
	0xa5, 0xcf, 0x02, 0x14, 0x43, 0x85, 0xda, 0x96, 0x49, 0xb1, 0x58, 0x85, 0x34, 0xf5, 0x34, 0x0d,
	0x53, 0x5a, 0x15, 0xea, 0x42, 0x23, 0x83, 0xc2, 0x50, 0x7c, 0x02, 0x79, 0xcd, 0xd0, 0x47, 0xd8,
	0x55, 0x78, 0xd1, 0x6a, 0xa2, 0x2e, 0x34, 0x72, 0xdb, 0x79, 0x79, 0x8f, 0x8b, 0xfb, 0x4c, 0x3b,
	0x5c, 0x40, 0x39, 0x6d, 0x1a, 0x8a, 0x8f, 0xa0, 0xc0, 0x73, 0x15, 0x03, 0x53, 0xaa, 0x0e, 0x70,
	0x35, 0x59, 0x17, 0x1a, 0xd9, 0xc3, 0x05, 0x94, 0xe7, 0xf2, 0xb1, 0xaf, 0xee, 0xa6, 0x61, 0x91,
	0xc7, 0xd2, 0x17, 0x01, 0x2a, 0xa7, 0xaa, 0xe3, 0x12, 0x97, 0x58, 0x66, 0x9b, 0xd0, 0x61, 0x60,
	0x54, 0xdc, 0x80, 0x9c, 0x4e, 0xe8, 0x50, 0x31, 0x3d, 0xa3, 0x8f, 0x1d, 0xee, 0xac, 0x80, 0x80,
	0x49, 0x27, 0x5c, 0x11, 0x9f, 0x41, 0xca, 0x9d, 0xd8, 0x98, 0x9b, 0x2a, 0x6e, 0x6f, 0xca, 0x71,
	0x55, 0xa6, 0x62, 0x6f, 0x62, 0x63, 0xc4, 0x17, 0x48, 0x0f, 0xa1, 0x10, 0x91, 0xc5, 0x34, 0x24,
	0x8f, 0x77, 0x51, 0x69, 0x81, 0x0d, 0x0e, 0x4e, 0x7b, 0x25, 0x41, 0xfa, 0x29, 0xc0, 0xca, 0xb5,
	0x7a, 0xf7, 0x07, 0x4b, 0x7c, 0x0c, 0xe2, 0x85, 0x35, 0xf2, 0x0c, 0xac, 0xe8, 0xf8, 0x82, 0x68,
	0x58, 0x19, 0x78, 0x44, 0xaf, 0xa6, 0x58, 0x2e, 0x2a, 0xf9, 0x33, 0x6d, 0x3e, 0x71, 0xe0, 0x11,
	0x7d, 0x8a, 0xf6, 0xbb, 0x00, 0xe5, 0x8e, 0xe5, 0x18, 0xaa, 0xfb, 0x96, 0xe7, 0x84, 0x64, 0xe3,
	0xcb, 0x09, 0xf1, 0xe5, 0x6e, 0x60, 0x8e, 0xa9, 0x28, 0x77, 0xc8, 0x08, 0x9f, 0x4d, 0xa8, 0x8b,
	0x8d, 0x19, 0xcc, 0x9b, 0x50, 0x8c, 0xea, 0x62, 0x06, 0x52, 0x27, 0xbd, 0xce, 0x99, 0x0f, 0xba,
	0xd3, 0x62, 0xa0, 0xd9, 0xf1, 0x47, 0x2b, 0xce, 0xc3, 0xa5, 0xac, 0x41, 0xf5, 0x88, 0x50, 0x97,
	0x1d, 0xfc, 0x91, 0xa5, 0xa9, 0xec, 0x12, 0xd0, 0xf0, 0x01, 0x9d, 0x43, 0x7e, 0x56, 0x67, 0x46,
	0x5b, 0xba, 0x6a, 0xbb, 0xc1, 0x1d, 0xcd, 0xa2, 0x30, 0x14, 0x4b, 0x90, 0xdc, 0xf5, 0x28, 0xf7,
	0x97, 0x45, 0x6c, 0x28, 0xae, 0xc2, 0x52, 0x4f, 0x75, 0x06, 0xd8, 0xf5, 0x0d, 0xa0, 0x20, 0x12,
	0x2b, 0xb0, 0x78, 0xf4, 0xe6, 0xa4, 0xdb, 0x0e, 0xce, 0xd4, 0x0f, 0xa4, 0x5f, 0x09, 0x58, 0x8b,
	0xb1, 0xf1, 0x57, 0x40, 0xaf, 0xe0, 0xbf, 0x31, 0x31, 0x75, 0x6b, 0x4c, 0x15, 0xd5, 0x26, 0x11,
	0x4a, 0x25, 0xf9, 0x9d, 0x3f, 0xd3, 0xb2, 0x49, 0x48, 0x6a, 0x79, 0x1c, 0x95, 0xfe, 0xf5, 0x56,
	0xf6, 0xa0, 0xc8, 0x1f, 0xe8, 0x28, 0xb4, 0x56, 0x4d, 0xd5, 0x93, 0x8d, 0xdc, 0xf6, 0x96, 0x7c,
	0xab, 0x69, 0x39, 0xa2, 0xee, 0x9b, 0xae, 0x33, 0x41, 0x05, 0x7d, 0x56, 0xab, 0xbd, 0x06, 0xf1,
	0x66, 0x12, 0x43, 0x39, 0xc4, 0x93, 0x00, 0x30, 0x1b, 0x8a, 0x9b, 0xb0, 0x78, 0xa1, 0x8e, 0x3c,
	0x1c, 0x7c, 0x58, 0x21, 0x52, 0x1a, 0xf9, 0x73, 0x2f, 0x13, 0xcf, 0x85, 0xe9, 0xa1, 0x56, 0x40,
	0x0c, 0x8d, 0x75, 0xdb, 0x57, 0xc7, 0xf9, 0x3f, 0xa4, 0x03, 0x85, 0x6d, 0xd2, 0x6d, 0x33, 0x9a,
	0x49, 0xb6, 0x49, 0xb7, 0x4d, 0xa5, 0x6f, 0x09, 0x28, 0x47, 0xd6, 0xcc, 0x0b, 0xfb, 0x17, 0x90,
	0xe6, 0xec, 0x79, 0x1b, 0x60, 0xd0, 0xeb, 0x72, 0x8c, 0x4f, 0xce, 0xa4, 0xab, 0xfb, 0x9c, 0x97,
	0x74, 0x1e, 0xd4, 0xf6, 0x20, 0x37, 0x23, 0xc7, 0x90, 0x5d, 0x8f, 0x92, 0xcd, 0xc8, 0x61, 0xd5,
	0x38, 0xa8, 0x1b, 0xf0, 0x20, 0xdc, 0xd8, 0x7f, 0xc0, 0xc7, 0xaa, 0x6d, 0x13, 0x73, 0x70, 0xc5,
	0xf7, 0x47, 0x02, 0xd6, 0x6f, 0xcb, 0xb8, 0xc7, 0x96, 0xfa, 0x1e, 0x4a, 0x1c, 0x60, 0xd0, 0x08,
	0x6d, 0x95, 0x38, 0x01, 0xc9, 0x1d, 0xf9, 0xcf, 0x76, 0xe5, 0xe9, 0xd4, 0xa9, 0x4a, 0x1c, 0x1f,
	0x2e, 0x7f, 0x09, 0x53, 0xb1, 0xd6, 0x82, 0x72, 0x4c, 0x5a, 0x0c, 0xec, 0xca, 0x2c, 0xec, 0x6c,
	0x2c, 0xe2, 0x0f, 0x50, 0x46, 0x98, 0x92, 0x4b, 0x7c, 0x97, 0x2e, 0xbe, 0x06, 0x19, 0x13, 0x8f,
	0x15, 0x56, 0x86, 0x6f, 0x95, 0x42, 0x69, 0x13, 0x8f, 0xcf, 0xc8, 0x25, 0xe6, 0x2d, 0x38, 0xba,
	0xc1, 0x3c, 0xb4, 0xe0, 0x7d, 0x58, 0x69, 0x13, 0x6a, 0x58, 0x9e, 0x79, 0x97, 0x5f, 0x2f, 0xe9,
	0xab, 0x00, 0xab, 0xd7, 0xeb, 0xcc, 0xc1, 0xe7, 0xf5, 0x97, 0xf8, 0xdf, 0xb3, 0x9d, 0xdf, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x92, 0xd6, 0x89, 0x76, 0xed, 0x09, 0x00, 0x00,
}
